[{"name":"Posix.IO","comment":"\n\n\n# IO Monad\n\n@docs IO, return, do, map, exitOnError\n\n\n# Create IO Program\n\n@docs Process, PosixProgram, program\n\n","unions":[],"aliases":[{"name":"IO","comment":" ","args":["a"],"type":"Internal.Effect.IO a"},{"name":"PosixProgram","comment":" ","args":[],"type":"Internal.Program.PosixProgram"},{"name":"Process","comment":" ","args":[],"type":"{ argv : List.List String.String, pid : Basics.Int, env : Dict.Dict String.String String.String }"}],"values":[{"name":"do","comment":" ","type":"Posix.IO.IO a -> (a -> Posix.IO.IO b) -> Posix.IO.IO b"},{"name":"exitOnError","comment":" Print to stderr and exit program on `Err`\n","type":"(e -> String.String) -> Posix.IO.IO (Result.Result e a) -> Posix.IO.IO a"},{"name":"map","comment":" ","type":"(a -> b) -> Posix.IO.IO a -> Posix.IO.IO b"},{"name":"program","comment":"\n\n    module HelloUser exposing (program)\n\n    import Dict exposing (Dict)\n    import Posix.IO as IO exposing (IO, Process)\n    import Posix.IO.File as File\n\n    helloUser : Process -> IO ()\n    helloUser process =\n        let\n            userName =\n                Dict.get \"USER\" process.env\n                    |> Maybe.withDefault \"Unknown\"\n        in\n        File.write File.stdOut userName\n\n    program : IO.PosixProgram\n    program =\n        IO.program helloUser\n\n","type":"(Posix.IO.Process -> Posix.IO.IO ()) -> Internal.Program.PosixProgram"},{"name":"return","comment":" ","type":"a -> Posix.IO.IO a"}],"binops":[]},{"name":"Posix.IO.File","comment":"\n\n@docs Error, FD\n@docs Filename, open, read, write\n\n# Standard IO\n\n@docs stdErr, stdIn, stdOut\n\n","unions":[{"name":"Error","comment":" ","args":[],"cases":[["CouldNotOpen",["String.String"]]]},{"name":"FD","comment":" File Descriptor\n","args":[],"cases":[]}],"aliases":[{"name":"Filename","comment":" ","args":[],"type":"String.String"}],"values":[{"name":"open","comment":" ","type":"Posix.IO.File.Filename -> Posix.IO.File.IO (Result.Result String.String Posix.IO.File.FD)"},{"name":"read","comment":" ","type":"Posix.IO.File.FD -> Posix.IO.File.IO String.String"},{"name":"stdErr","comment":" ","type":"Posix.IO.File.FD"},{"name":"stdIn","comment":" ","type":"Posix.IO.File.FD"},{"name":"stdOut","comment":" ","type":"Posix.IO.File.FD"},{"name":"write","comment":" ","type":"Posix.IO.File.FD -> String.String -> Posix.IO.File.IO ()"}],"binops":[]},{"name":"Posix.IO.Process","comment":"\n\n\n# Process Operations\n\n@docs exit, print, logErr\n\n","unions":[],"aliases":[],"values":[{"name":"exit","comment":" Exit Program with a status.\n","type":"Basics.Int -> Posix.IO.Process.IO ()"},{"name":"logErr","comment":"\n","type":"String.String -> Posix.IO.Process.IO ()"},{"name":"print","comment":"\n","type":"String.String -> Posix.IO.Process.IO ()"}],"binops":[]}]