[{"name":"Posix.IO","comment":"\n\n\n# Create IO\n\n@docs IO, return, fail, none\n\n\n# Basic IO\n\n@docs print, printLn, sleep, randomSeed, exit\n\n\n# Transforming IO\n\n@docs map, andThen, and, combine\n\n\n# Handle Errors\n\n@docs mapError, recover\n\n\n# Low Level\n\n@docs performTask, attemptTask, callJs, ArgsToJs\n\n\n# Program\n\n@docs program, Process, PortIn, PortOut\n\n","unions":[],"aliases":[{"name":"ArgsToJs","comment":" ","args":[],"type":"{ fn : String.String, args : List.List Json.Encode.Value }"},{"name":"IO","comment":" ","args":["err","ok"],"type":"Internal.ContWithResult.Cont Internal.Process.Proc err ok"},{"name":"PortIn","comment":" ","args":["msg"],"type":"Internal.Process.PortIn msg"},{"name":"PortOut","comment":" ","args":["msg"],"type":"Internal.Process.PortOut msg"},{"name":"Process","comment":" ","args":[],"type":"{ argv : List.List String.String, pid : Basics.Int, env : Dict.Dict String.String String.String }"}],"values":[{"name":"and","comment":" ","type":"Posix.IO.IO x b -> Posix.IO.IO x a -> Posix.IO.IO x b"},{"name":"andThen","comment":" ","type":"(a -> Posix.IO.IO x b) -> Posix.IO.IO x a -> Posix.IO.IO x b"},{"name":"attemptTask","comment":" ","type":"Task.Task err ok -> Posix.IO.IO err ok"},{"name":"callJs","comment":" ","type":"Posix.IO.ArgsToJs -> Json.Decode.Decoder a -> Posix.IO.IO x a"},{"name":"combine","comment":" ","type":"List.List (Posix.IO.IO err ok) -> Posix.IO.IO err (List.List ok)"},{"name":"exit","comment":" ","type":"Basics.Int -> Posix.IO.IO x ()"},{"name":"fail","comment":" ","type":"err -> Posix.IO.IO err a"},{"name":"map","comment":" ","type":"(a -> b) -> Posix.IO.IO x a -> Posix.IO.IO x b"},{"name":"mapError","comment":" ","type":"(x -> y) -> Posix.IO.IO x a -> Posix.IO.IO y a"},{"name":"none","comment":" ","type":"Posix.IO.IO x ()"},{"name":"performTask","comment":" ","type":"Task.Task Basics.Never a -> Posix.IO.IO x a"},{"name":"print","comment":" ","type":"String.String -> Posix.IO.IO x ()"},{"name":"printLn","comment":" ","type":"String.String -> Posix.IO.IO x ()"},{"name":"program","comment":" ","type":"(Posix.IO.Process -> Posix.IO.IO String.String ()) -> Internal.Process.PosixProgram"},{"name":"randomSeed","comment":" ","type":"Posix.IO.IO x Random.Seed"},{"name":"recover","comment":" ","type":"(err -> Posix.IO.IO x ok) -> Posix.IO.IO err ok -> Posix.IO.IO x ok"},{"name":"return","comment":" ","type":"a -> Posix.IO.IO err a"},{"name":"sleep","comment":" ","type":"Basics.Float -> Posix.IO.IO x ()"}],"binops":[]}]